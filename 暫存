如何修改成使用者可以用'a'按鍵和'd'按鍵控制@左右移動，按'w'按鍵和's'按鍵做上下移動
在程式開頭宣告 SWI_ReadC 的數值
MOV r0, #SWI_ReadC
MSR SPSR_cxsf, r0
在讀取鍵盤輸入之後，加上 CMP 和 BEQ 指令以處理 'w' 和 's' 鍵
SWI SWI_ReadC        ; 讀取鍵盤輸入
CMP r0, #'a'        ; 如果輸入的是 'a'
BEQ MOVE_LEFT
CMP r0, #'d'        ; 如果輸入的是 'd'
BEQ MOVE_RIGHT
CMP r0, #'w'        ; 如果輸入的是 'w'
BEQ MOVE_UP
CMP r0, #'s'        ; 如果輸入的是 's'
BEQ MOVE_DOWN
B LOOP              ; 其他輸入則重新讀取鍵盤輸入

新增兩個子程式 MOVE_UP 和 MOVE_DOWN，來處理上下移動的邏輯
MOVE_UP
    CMP r3, #9          ; 如果已經到上邊界，則不移動
    BLE LOOP
    ADD r2, r1, r3      ; @的位置
    LDRB r0, [r2]       ; @放到r0
    STRB r4, [r2]       ; " "寫入r2
    SUB r3, r3, #54     ; 將@向上移動6個位置
    ADD r2, r1, r3
    STRB r0, [r2]
    B LOOP

MOVE_DOWN
    CMP r3, #32         ; 如果已經到下邊界，則不移動
    BGE LOOP
    ADD r2, r1, r3      ; @的位置
    LDRB r0, [r2]       ; @放到r0
    STRB r4, [r2]       ; " "寫入r2
    ADD r3, r3, #54     ; 將@向下移動6個位置
    ADD r2, r1, r3
    STRB r0, [r2]
    B LOOP
    
完整修改後的程式碼如下：

AREA Goalkeeper, CODE, READONLY
SWI_WriteC      EQU     &0
SWI_Exit        EQU     &11
SWI_ReadC       EQU     &4
SWI_Write0      EQU     &2
SWI_Clock       EQU     &61
FLASH           EQU     70
SWI_Time        EQU     &63
                ENTRY

START
    MOV r3, #3
    MOV r4, #" "
    ADR r1, SCRBG

    ; 設定 SWI_ReadC 的數值
    MOV r0, #SWI_ReadC
    MSR SPSR_cxsf, r0

LOOP
